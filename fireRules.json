{
  "rules":
  {
    ".read": "true",
    ".write": "true",

    "businesses":
    {
      "$business":
      {
        "businessNumber":
        {
          ".validate": "newData.isString() && newData.val().matches(/^\\d{9}$/i)"
        },
        "name":
        {
          ".validate": "newData.isString() && newData.val().length >= 2 && newData.val().length <= 48 "
        },
        "email":
        {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)"
        },
        "primaryBusiness":
        {
          ".validate": "newData.isString() && (newData.val() == 'Fisher' || newData.val() == 'Distributor' || newData.val() == 'Processor' || newData.val() == 'Fish Monger')"
        },
        "address":
        {
          ".validate": "newData.val().length < 50"
        },
        //I'm sure there must be an easier way to do this, I just can't find documentation anywhere of what it might be
        "province":
        {
          ".validate": "newData.val() == 'NS'|| newData.val() == 'NB' || newData.val() == 'PE' || newData.val() == 'NL' || newData.val() == 'QC' || newData.val() == 'ON' || newData.val() == 'MB' || newData.val() == 'SK' || newData.val() == 'AB' || newData.val() == 'BC' || newData.val() == 'YT' || newData.val() == 'NT' || newData.val() == 'NU' || newData.val() == ' '"
        }

      }
    }
  }
}